/*
 * button.c
 *
 *  Created on: Nov 4, 2022
 *      Author: Hoang
 */

#include"button.h"
#include "software_timer.h"
int KeyReg0 = NORMAL_STATE;
int KeyReg1 = NORMAL_STATE;
int KeyReg2 = NORMAL_STATE;
int KeyReg3 = NORMAL_STATE;
int KeyReg4 = NORMAL_STATE;
int KeyReg5 = NORMAL_STATE;
int KeyReg6 = NORMAL_STATE;
int KeyReg7 = NORMAL_STATE;
int KeyReg8 = NORMAL_STATE;
int KeyReg9 = NORMAL_STATE;
int KeyReg10 = NORMAL_STATE;
int KeyReg11 = NORMAL_STATE;

int KeyReg12 = NORMAL_STATE;
int KeyReg13 = NORMAL_STATE;
int KeyReg14 = NORMAL_STATE;
int KeyReg15 = NORMAL_STATE;

int button1_flag = 0;
int button2_flag = 0;
int button3_flag = 0;
int TimeOutForKeyPress1 =  100;
int TimeOutForKeyPress2 =  100;
int TimeOutForKeyPress3 =  100;
void subKeyProcess1(){
	button1_flag = 1;
}
/*
void subKeyProcess2(){
	button2_flag = 1;
}
void subKeyProcess3(){
	button3_flag = 1;
}
*/
int isButtonPressed1(){
	if (button1_flag == 1){
		button1_flag = 0;
		return 1;
	}
	return 0;
}
/*
int isButtonPressed2(){
	if (button2_flag == 1){
		button2_flag = 0;
		return 1;
	}
	return 0;
}
int isButtonPressed3(){
	if (button3_flag == 1){
		button3_flag = 0;
		return 1;
	}
	return 0;
}
void getKeyInput2(){
  KeyReg6 = KeyReg5;
  KeyReg5 = KeyReg4;
  KeyReg4 = HAL_GPIO_ReadPin(Button2_GPIO_Port, Button2_Pin);
  if ((KeyReg5 == KeyReg4) && (KeyReg5 == KeyReg6)){
    if (KeyReg6 != KeyReg7){
      KeyReg7 = KeyReg6;

      if (KeyReg7 == PRESSED_STATE){
        TimeOutForKeyPress2 = 100;
        subKeyProcess2();
      }
    }else{
       TimeOutForKeyPress2 --;
        if (TimeOutForKeyPress2 == 0){
          KeyReg7 = NORMAL_STATE;
        }
    }
  }
} */
void getKeyInput1(){
  KeyReg2 = KeyReg1;
  KeyReg1 = KeyReg0;
  KeyReg0 = HAL_GPIO_ReadPin(button_GPIO_Port, button_Pin);
  if ((KeyReg1 == KeyReg0) && (KeyReg1 == KeyReg2)){
    if (KeyReg2 != KeyReg3){
      KeyReg3 = KeyReg2;

      if (KeyReg3 == PRESSED_STATE){
        TimeOutForKeyPress1 = 100;
        subKeyProcess1();
      }
    }else{
       TimeOutForKeyPress1 --;
        if (TimeOutForKeyPress1 == 0){
          KeyReg3 = NORMAL_STATE;
        }
    }
  }
}
void getKeydouble(){
  KeyReg2 = KeyReg1;
  KeyReg1 = KeyReg0;
  KeyReg0 = HAL_GPIO_ReadPin(button_GPIO_Port, button_Pin);
  if ((KeyReg1 == KeyReg0) && (KeyReg1 == KeyReg2)){
    if (KeyReg2 != KeyReg3){
      KeyReg3 = KeyReg2;

      if (KeyReg3 == PRESSED_STATE){
        TimeOutForKeyPress1 = 100;

      }
    }else{
       TimeOutForKeyPress1 --;
        if (TimeOutForKeyPress1 == 0){
          KeyReg3 = NORMAL_STATE;
        }
    }
  }
}
int duration = 200;
int count_double = 0;
int double_click(){
	if (isButtonPressed1() == 1){
		count_double++;
	}
	if (duration == 0){
		duration = 200;
		if (count_double == 2){
				count_double = 0;
				return 1;
			}
			else{
				count_double = 0;
				return 0;
			}
	}
	duration--;
}


/*
void getKeyInput3(){
  KeyReg10 = KeyReg9;
  KeyReg9 = KeyReg8;
  KeyReg8 = HAL_GPIO_ReadPin(Button3_GPIO_Port, Button3_Pin);
  if ((KeyReg9 == KeyReg8) && (KeyReg9 == KeyReg10)){
    if (KeyReg10 != KeyReg11){
      KeyReg11 = KeyReg10;

      if (KeyReg11 == PRESSED_STATE){
        TimeOutForKeyPress3 = 100;
        subKeyProcess3();
      }
    }else{
       TimeOutForKeyPress3 --;
        if (TimeOutForKeyPress3 == 0){
          KeyReg11 = NORMAL_STATE;
        }
    }
  }
}
*/

